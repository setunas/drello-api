name: Deploy to Heroku at Production
on: pull_request

# on:
#   push:
#     branches:
#       - "main"

jobs:
  deploy:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Heroku login credentials
        run: |
          cat > ~/.netrc <<EOF
            machine api.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
            machine git.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
          EOF
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      - run: heroku git:remote --app drello-api-dev
      - run: heroku container:login
      - run: heroku container:push web
      - run: heroku container:release web
      # - run: heroku run bash
      # - name: Database Migration
      #   run:
      #     go install -tags 'mysql' github.com/golang-migrate/migrate/v4/cmd/migrate@latest &&
      #     migrate -path db/migrations -database "mysql://beba733eff51b5:$STG_DB_PASS@tcp($STG_DB_TCP_HOST:$STG_DB_PORT)/$STG_DB_NAME" up
      #   env:
      #     STG_DB_USER: ${{ secrets.STG_DB_USER }}
      #     STG_DB_PASS: ${{ secrets.STG_DB_PASS }}
      #     STG_DB_TCP_HOST: ${{ secrets.STG_DB_TCP_HOST }}
      #     STG_DB_PORT: ${{ secrets.STG_DB_PORT }}
      #     STG_DB_NAME: ${{ secrets.STG_DB_NAME }}

      #
      # - run: docker build
      #     --no-cache
      #     -t registry.heroku.com/drello-api-dev/web
      #     --build-arg DB_USER=$STG_DB_NAME
      #     --build-arg DB_PASS=$STG_DB_PASS
      #     --build-arg DB_TCP_HOST=$STG_DB_TCP_HOST
      #     --build-arg DB_PORT=$STG_DB_PORT
      #     --build-arg DB_NAME=$STG_DB_NAME .
      #   env:
      #     STG_DB_USER: ${{ secrets.STG_DB_USER }}
      #     STG_DB_PASS: ${{ secrets.STG_DB_PASS }}
      #     STG_DB_TCP_HOST: ${{ secrets.STG_DB_TCP_HOST }}
      #     STG_DB_PORT: ${{ secrets.STG_DB_PORT }}
      #     STG_DB_NAME: ${{ secrets.STG_DB_NAME }}

  # db-migrate:
  #   name: Database Migration
  #   needs: deploy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
